<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="1" ignored="9" total="45" passed="34">
  <reporter-output>
  </reporter-output>
  <suite name="All Test Suite" duration-ms="17656" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:26:09 CST">
    <groups>
      <group name="regression">
        <method signature="GroupTestcases.myMethod3FirstTestcase()[pri:0, instance:GroupTestcases@394e1a0f]" name="myMethod3FirstTestcase" class="GroupTestcases"/>
        <method signature="GroupTestcases.myMethod4FirstTestcase()[pri:0, instance:GroupTestcases@394e1a0f]" name="myMethod4FirstTestcase" class="GroupTestcases"/>
      </group> <!-- regression -->
      <group name="smoke">
        <method signature="GroupTestcases.myMethod1FirstTestcase()[pri:0, instance:GroupTestcases@56aac163]" name="myMethod1FirstTestcase" class="GroupTestcases"/>
        <method signature="GroupTestcases.myMethod2FirstTestcase()[pri:0, instance:GroupTestcases@56aac163]" name="myMethod2FirstTestcase" class="GroupTestcases"/>
      </group> <!-- smoke -->
    </groups>
    <test name="TestNGPractice test1" duration-ms="118" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
      <class name="SecondTestcase">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:SecondTestcase@610694f1]" name="BeforeClass" is-config="true" duration-ms="1" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="BeforeMethod()[pri:0, instance:SecondTestcase@610694f1]" name="BeforeMethod" is-config="true" duration-ms="0" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="myMethod1SecondTestcase()[pri:0, instance:SecondTestcase@610694f1]" name="myMethod1SecondTestcase" duration-ms="6" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myMethod1SecondTestcase -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:SecondTestcase@610694f1]" name="AfterMethod" is-config="true" duration-ms="1" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="BeforeMethod()[pri:0, instance:SecondTestcase@610694f1]" name="BeforeMethod" is-config="true" duration-ms="0" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="myMethod2SecondTestcase()[pri:0, instance:SecondTestcase@610694f1]" name="myMethod2SecondTestcase" duration-ms="3" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myMethod2SecondTestcase -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:SecondTestcase@610694f1]" name="AfterMethod" is-config="true" duration-ms="5" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="BeforeMethod()[pri:0, instance:SecondTestcase@610694f1]" name="BeforeMethod" is-config="true" duration-ms="1" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="myMethod3SecondTestcase()[pri:0, instance:SecondTestcase@610694f1]" name="myMethod3SecondTestcase" duration-ms="2" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myMethod3SecondTestcase -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:SecondTestcase@610694f1]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:SecondTestcase@610694f1]" name="AfterClass" is-config="true" duration-ms="1" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- SecondTestcase -->
      <class name="FirstTestcase">
        <test-method status="PASS" signature="BeforeTest()[pri:0, instance:FirstTestcase@3d99d22e]" name="BeforeTest" is-config="true" duration-ms="1" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTest -->
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:FirstTestcase@3d99d22e]" name="BeforeClass" is-config="true" duration-ms="1" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="BeforeMethod()[pri:0, instance:FirstTestcase@3d99d22e]" name="BeforeMethod" is-config="true" duration-ms="1" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="myMethod1FirstTestcase()[pri:0, instance:FirstTestcase@3d99d22e]" name="myMethod1FirstTestcase" duration-ms="0" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myMethod1FirstTestcase -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:FirstTestcase@3d99d22e]" name="AfterMethod" is-config="true" duration-ms="1" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="BeforeMethod()[pri:0, instance:FirstTestcase@3d99d22e]" name="BeforeMethod" is-config="true" duration-ms="1" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="myMethod2FirstTestcase()[pri:0, instance:FirstTestcase@3d99d22e]" name="myMethod2FirstTestcase" duration-ms="2" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myMethod2FirstTestcase -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:FirstTestcase@3d99d22e]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="BeforeMethod()[pri:0, instance:FirstTestcase@3d99d22e]" name="BeforeMethod" is-config="true" duration-ms="2" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="myMethod3FirstTestcase()[pri:0, instance:FirstTestcase@3d99d22e]" name="myMethod3FirstTestcase" duration-ms="1" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myMethod3FirstTestcase -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:FirstTestcase@3d99d22e]" name="AfterMethod" is-config="true" duration-ms="2" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:FirstTestcase@3d99d22e]" name="AfterClass" is-config="true" duration-ms="1" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterClass -->
        <test-method status="PASS" signature="AfterTest()[pri:0, instance:FirstTestcase@3d99d22e]" name="AfterTest" is-config="true" duration-ms="0" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTest -->
      </class> <!-- FirstTestcase -->
    </test> <!-- TestNGPractice test1 -->
    <test name="TestNGPractice test2" duration-ms="28" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
      <class name="SecondTestcase">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:SecondTestcase@4e7dc304]" name="BeforeClass" is-config="true" duration-ms="3" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="BeforeMethod()[pri:0, instance:SecondTestcase@4e7dc304]" name="BeforeMethod" is-config="true" duration-ms="1" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="myMethod1SecondTestcase()[pri:0, instance:SecondTestcase@4e7dc304]" name="myMethod1SecondTestcase" duration-ms="1" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myMethod1SecondTestcase -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:SecondTestcase@4e7dc304]" name="AfterMethod" is-config="true" duration-ms="1" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="BeforeMethod()[pri:0, instance:SecondTestcase@4e7dc304]" name="BeforeMethod" is-config="true" duration-ms="2" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="myMethod2SecondTestcase()[pri:0, instance:SecondTestcase@4e7dc304]" name="myMethod2SecondTestcase" duration-ms="1" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myMethod2SecondTestcase -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:SecondTestcase@4e7dc304]" name="AfterMethod" is-config="true" duration-ms="2" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="myMethod3SecondTestcase()[pri:0, instance:SecondTestcase@4e7dc304]" name="myMethod3SecondTestcase" duration-ms="1" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myMethod3SecondTestcase -->
        <test-method status="PASS" signature="BeforeMethod()[pri:0, instance:SecondTestcase@4e7dc304]" name="BeforeMethod" is-config="true" duration-ms="0" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:SecondTestcase@4e7dc304]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:SecondTestcase@4e7dc304]" name="AfterClass" is-config="true" duration-ms="0" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- SecondTestcase -->
      <class name="FirstTestcase">
        <test-method status="PASS" signature="BeforeTest()[pri:0, instance:FirstTestcase@64729b1e]" name="BeforeTest" is-config="true" duration-ms="1" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTest -->
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:FirstTestcase@64729b1e]" name="BeforeClass" is-config="true" duration-ms="0" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="BeforeMethod()[pri:0, instance:FirstTestcase@64729b1e]" name="BeforeMethod" is-config="true" duration-ms="1" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="myMethod1FirstTestcase()[pri:0, instance:FirstTestcase@64729b1e]" name="myMethod1FirstTestcase" duration-ms="1" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myMethod1FirstTestcase -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:FirstTestcase@64729b1e]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="myMethod2FirstTestcase()[pri:0, instance:FirstTestcase@64729b1e]" name="myMethod2FirstTestcase" duration-ms="1" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myMethod2FirstTestcase -->
        <test-method status="PASS" signature="BeforeMethod()[pri:0, instance:FirstTestcase@64729b1e]" name="BeforeMethod" is-config="true" duration-ms="0" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:FirstTestcase@64729b1e]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="myMethod3FirstTestcase()[pri:0, instance:FirstTestcase@64729b1e]" name="myMethod3FirstTestcase" duration-ms="0" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myMethod3FirstTestcase -->
        <test-method status="PASS" signature="BeforeMethod()[pri:0, instance:FirstTestcase@64729b1e]" name="BeforeMethod" is-config="true" duration-ms="0" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="AfterTest()[pri:0, instance:FirstTestcase@64729b1e]" name="AfterTest" is-config="true" duration-ms="0" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTest -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:FirstTestcase@64729b1e]" name="AfterClass" is-config="true" duration-ms="0" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterClass -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:FirstTestcase@64729b1e]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
      </class> <!-- FirstTestcase -->
    </test> <!-- TestNGPractice test2 -->
    <test name="TestNGPractice Grouping" duration-ms="12" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
      <class name="GroupTestcases">
        <test-method status="PASS" signature="myMethod1FirstTestcase()[pri:0, instance:GroupTestcases@56aac163]" name="myMethod1FirstTestcase" duration-ms="2" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myMethod1FirstTestcase -->
        <test-method status="PASS" signature="myMethod2FirstTestcase()[pri:0, instance:GroupTestcases@56aac163]" name="myMethod2FirstTestcase" duration-ms="0" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myMethod2FirstTestcase -->
      </class> <!-- GroupTestcases -->
    </test> <!-- TestNGPractice Grouping -->
    <test name="TestNGPractice Grouping1" duration-ms="13" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
      <class name="GroupTestcases">
        <test-method status="PASS" signature="BeforeTest()[pri:0, instance:GroupTestcases@394e1a0f]" name="BeforeTest" is-config="true" duration-ms="1" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTest -->
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:GroupTestcases@394e1a0f]" name="BeforeClass" is-config="true" duration-ms="1" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="BeforeMethod()[pri:0, instance:GroupTestcases@394e1a0f]" name="BeforeMethod" is-config="true" duration-ms="1" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="myMethod3FirstTestcase()[pri:0, instance:GroupTestcases@394e1a0f]" name="myMethod3FirstTestcase" duration-ms="1" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myMethod3FirstTestcase -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:GroupTestcases@394e1a0f]" name="AfterMethod" is-config="true" duration-ms="1" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="BeforeMethod()[pri:0, instance:GroupTestcases@394e1a0f]" name="BeforeMethod" is-config="true" duration-ms="0" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="myMethod4FirstTestcase()[pri:0, instance:GroupTestcases@394e1a0f]" name="myMethod4FirstTestcase" duration-ms="1" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myMethod4FirstTestcase -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:GroupTestcases@394e1a0f]" name="AfterMethod" is-config="true" duration-ms="1" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="BeforeMethod()[pri:0, instance:GroupTestcases@394e1a0f]" name="BeforeMethod" is-config="true" duration-ms="1" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="myMethod5FirstTestcase()[pri:0, instance:GroupTestcases@394e1a0f]" name="myMethod5FirstTestcase" duration-ms="0" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myMethod5FirstTestcase -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:GroupTestcases@394e1a0f]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:GroupTestcases@394e1a0f]" name="AfterClass" is-config="true" duration-ms="0" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterClass -->
        <test-method status="PASS" signature="AfterTest()[pri:0, instance:GroupTestcases@394e1a0f]" name="AfterTest" is-config="true" duration-ms="0" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTest -->
      </class> <!-- GroupTestcases -->
    </test> <!-- TestNGPractice Grouping1 -->
    <test name="TestNGPractice Parameterization" duration-ms="9599" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:26:02 CST">
      <class name="Parameterization">
        <test-method status="PASS" signature="config(java.lang.String,java.lang.String)[pri:0, instance:Parameterization@2833cc44]" name="config" is-config="true" duration-ms="8267" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:26:00 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[John]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Kerry]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- config -->
        <test-method status="PASS" signature="assertMethod(java.lang.String,java.lang.String)[pri:0, instance:Parameterization@2833cc44]" name="assertMethod" duration-ms="1328" started-at="2022-01-15T21:26:00 CST" finished-at="2022-01-15T21:26:02 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[John]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Kerry]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- assertMethod -->
      </class> <!-- Parameterization -->
    </test> <!-- TestNGPractice Parameterization -->
    <test name="TestNGPractice Parameterization 1" duration-ms="7405" started-at="2022-01-15T21:26:02 CST" finished-at="2022-01-15T21:26:09 CST">
      <class name="Parameterization">
        <test-method status="PASS" signature="config(java.lang.String,java.lang.String)[pri:0, instance:Parameterization@1b68ddbd]" name="config" is-config="true" duration-ms="5861" started-at="2022-01-15T21:26:02 CST" finished-at="2022-01-15T21:26:07 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[John]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Kerry]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- config -->
        <test-method status="PASS" signature="assertMethod(java.lang.String,java.lang.String)[pri:0, instance:Parameterization@1b68ddbd]" name="assertMethod" duration-ms="1528" started-at="2022-01-15T21:26:07 CST" finished-at="2022-01-15T21:26:09 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[John]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Kerry]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- assertMethod -->
      </class> <!-- Parameterization -->
    </test> <!-- TestNGPractice Parameterization 1 -->
    <test name="TestNGPractice dataprovider" duration-ms="14" started-at="2022-01-15T21:26:09 CST" finished-at="2022-01-15T21:26:09 CST">
      <class name="DataProviderClass">
        <test-method status="PASS" signature="loginTest(java.lang.String,java.lang.String)[pri:0, instance:DataProviderClass@57e1b0c]" name="loginTest" duration-ms="1" started-at="2022-01-15T21:26:09 CST" data-provider="nameSet" finished-at="2022-01-15T21:26:09 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[John]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method status="PASS" signature="loginTest(java.lang.String,java.lang.String)[pri:0, instance:DataProviderClass@57e1b0c]" name="loginTest" duration-ms="1" started-at="2022-01-15T21:26:09 CST" data-provider="nameSet" finished-at="2022-01-15T21:26:09 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sandra]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method status="PASS" signature="loginTest(java.lang.String,java.lang.String)[pri:0, instance:DataProviderClass@57e1b0c]" name="loginTest" duration-ms="1" started-at="2022-01-15T21:26:09 CST" data-provider="nameSet" finished-at="2022-01-15T21:26:09 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Mayo]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
      </class> <!-- DataProviderClass -->
    </test> <!-- TestNGPractice dataprovider -->
    <test name="TestNGPractice dataprovideruser" duration-ms="19" started-at="2022-01-15T21:26:09 CST" finished-at="2022-01-15T21:26:09 CST">
      <class name="DataProviderClass">
        <test-method status="PASS" signature="loginTest(java.lang.String,java.lang.String)[pri:0, instance:DataProviderClass@458c1321]" name="loginTest" duration-ms="1" started-at="2022-01-15T21:26:09 CST" data-provider="nameSet" finished-at="2022-01-15T21:26:09 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[John]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method status="PASS" signature="loginTest(java.lang.String,java.lang.String)[pri:0, instance:DataProviderClass@458c1321]" name="loginTest" duration-ms="1" started-at="2022-01-15T21:26:09 CST" data-provider="nameSet" finished-at="2022-01-15T21:26:09 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sandra]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method status="PASS" signature="loginTest(java.lang.String,java.lang.String)[pri:0, instance:DataProviderClass@458c1321]" name="loginTest" duration-ms="0" started-at="2022-01-15T21:26:09 CST" data-provider="nameSet" finished-at="2022-01-15T21:26:09 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Mayo]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
      </class> <!-- DataProviderClass -->
    </test> <!-- TestNGPractice dataprovideruser -->
    <test name="TestNGPractice paralleltest methods" duration-ms="66" started-at="2022-01-15T21:26:09 CST" finished-at="2022-01-15T21:26:09 CST">
      <class name="paralleltesting.ParallelTest1">
        <test-method status="PASS" signature="method1()[pri:0, instance:paralleltesting.ParallelTest1@ea1a8d5]" name="method1" duration-ms="18" started-at="2022-01-15T21:26:09 CST" finished-at="2022-01-15T21:26:09 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method1 -->
        <test-method status="PASS" signature="method2()[pri:0, instance:paralleltesting.ParallelTest1@ea1a8d5]" name="method2" duration-ms="4" started-at="2022-01-15T21:26:09 CST" finished-at="2022-01-15T21:26:09 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method2 -->
      </class> <!-- paralleltesting.ParallelTest1 -->
      <class name="DataProviderUser">
        <test-method status="PASS" signature="loginTestinDataProviderUser(java.lang.String,java.lang.String)[pri:0, instance:DataProviderUser@1563da5]" name="loginTestinDataProviderUser" duration-ms="0" started-at="2022-01-15T21:26:09 CST" data-provider="nameSet" finished-at="2022-01-15T21:26:09 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[John]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTestinDataProviderUser -->
        <test-method status="PASS" signature="loginTestinDataProviderUser(java.lang.String,java.lang.String)[pri:0, instance:DataProviderUser@1563da5]" name="loginTestinDataProviderUser" duration-ms="0" started-at="2022-01-15T21:26:09 CST" data-provider="nameSet" finished-at="2022-01-15T21:26:09 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sandra]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTestinDataProviderUser -->
        <test-method status="PASS" signature="loginTestinDataProviderUser(java.lang.String,java.lang.String)[pri:0, instance:DataProviderUser@1563da5]" name="loginTestinDataProviderUser" duration-ms="0" started-at="2022-01-15T21:26:09 CST" data-provider="nameSet" finished-at="2022-01-15T21:26:09 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Mayo]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTestinDataProviderUser -->
      </class> <!-- DataProviderUser -->
    </test> <!-- TestNGPractice paralleltest methods -->
    <test name="TestNGPractice listenersClassUseThruTestNGXML" duration-ms="28" started-at="2022-01-15T21:26:09 CST" finished-at="2022-01-15T21:26:09 CST">
      <class name="listeners.listenersClassUseThruTestNGXML">
        <test-method status="PASS" signature="method1()[pri:0, instance:listeners.listenersClassUseThruTestNGXML@52feb982]" name="method1" duration-ms="1" started-at="2022-01-15T21:26:09 CST" finished-at="2022-01-15T21:26:09 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method1 -->
        <test-method status="PASS" signature="method2()[pri:0, instance:listeners.listenersClassUseThruTestNGXML@52feb982]" name="method2" duration-ms="1" started-at="2022-01-15T21:26:09 CST" finished-at="2022-01-15T21:26:09 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method2 -->
        <test-method status="FAIL" signature="method3()[pri:0, instance:listeners.listenersClassUseThruTestNGXML@52feb982]" name="method3" duration-ms="6" started-at="2022-01-15T21:26:09 CST" finished-at="2022-01-15T21:26:09 CST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.fail(Assert.java:106)
at listeners.listenersClassUseThruTestNGXML.method3(listenersClassUseThruTestNGXML.java:26)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1249)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method3 -->
        <test-method status="SKIP" signature="method4()[pri:0, instance:listeners.listenersClassUseThruTestNGXML@52feb982]" name="method4" duration-ms="0" started-at="2022-01-15T21:26:09 CST" finished-at="2022-01-15T21:26:09 CST">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[skipped method 4]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: skipped method 4
at listeners.listenersClassUseThruTestNGXML.method4(listenersClassUseThruTestNGXML.java:32)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1249)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method4 -->
        <test-method status="PASS" signature="method5()[pri:0, instance:listeners.listenersClassUseThruTestNGXML@52feb982]" name="method5" duration-ms="0" started-at="2022-01-15T21:26:09 CST" finished-at="2022-01-15T21:26:09 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method5 -->
      </class> <!-- listeners.listenersClassUseThruTestNGXML -->
    </test> <!-- TestNGPractice listenersClassUseThruTestNGXML -->
    <test name="TestNGPractice TakingParameterfromPOMXML" duration-ms="2" started-at="2022-01-15T21:26:09 CST" finished-at="2022-01-15T21:26:09 CST">
      <class name="TakeParametersFromPOMXML">
        <test-method status="PASS" signature="takingParameterFromPOM(java.lang.String)[pri:0, instance:TakeParametersFromPOMXML@78e67e0a]" name="takingParameterFromPOM" duration-ms="1" started-at="2022-01-15T21:26:09 CST" finished-at="2022-01-15T21:26:09 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[ie]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takingParameterFromPOM -->
      </class> <!-- TakeParametersFromPOMXML -->
      <class name="GroupTestcases">
        <test-method status="PASS" signature="BeforeSuite()[pri:0, instance:GroupTestcases@394e1a0f]" name="BeforeSuite" is-config="true" duration-ms="1" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeSuite -->
        <test-method status="PASS" signature="AfterSuite()[pri:0, instance:GroupTestcases@394e1a0f]" name="AfterSuite" is-config="true" duration-ms="0" started-at="2022-01-15T21:26:09 CST" finished-at="2022-01-15T21:26:09 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterSuite -->
      </class> <!-- GroupTestcases -->
      <class name="FirstTestcase">
        <test-method status="PASS" signature="BeforeSuite()[pri:0, instance:FirstTestcase@64729b1e]" name="BeforeSuite" is-config="true" duration-ms="13" started-at="2022-01-15T21:25:52 CST" finished-at="2022-01-15T21:25:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeSuite -->
        <test-method status="PASS" signature="AfterSuite()[pri:0, instance:FirstTestcase@64729b1e]" name="AfterSuite" is-config="true" duration-ms="0" started-at="2022-01-15T21:26:09 CST" finished-at="2022-01-15T21:26:09 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterSuite -->
      </class> <!-- FirstTestcase -->
    </test> <!-- TestNGPractice TakingParameterfromPOMXML -->
  </suite> <!-- All Test Suite -->
</testng-results>
